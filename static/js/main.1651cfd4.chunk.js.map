{"version":3,"sources":["context/PlanetsContext.js","components/Table.jsx","components/OrderForm.jsx","components/Filter.jsx","pages/Intro.jsx","pages/Main.jsx","components/Router.jsx","components/Films.jsx","App.js","context/Provider.js","index.js"],"names":["PlanetsContext","createContext","headers","Table","useContext","data","filter","useState","planets","setPlanets","useEffect","filteredPlanets","name","filterByName","filterByNumerics","order","nameFilter","planet","includes","forEach","f","column","comparison","value","parseInt","sortValues","a","b","item1","item2","sort","filterPlanets","createRow","map","field","index","film","i","className","arrayOptions","OrderForm","submitOrder","localOrder","setLocalOrder","handleChange","target","htmlFor","id","onChange","opt","type","onClick","columnField","comparisonField","Filter","handleClick","deleteClick","localFilter","setLocalFilter","filters","setFilters","length","arrayOfFilters","v","updateFilter","Intro","intro","setIntro","setTimeout","to","Main","Router","exact","path","component","Films","movie","setMovie","fetchMovies","fetch","json","title","App","Provider","children","setData","setFilter","API","request","results","fetchData","context","state","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1651cfd4.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst PlanetsContext = createContext();\n\nexport default PlanetsContext;\n","import React, { useContext, useEffect, useState } from 'react';\nimport PlanetsContext from '../context/PlanetsContext';\nimport { Films } from '.'\n\nconst headers = ['name', 'climate', 'created', 'diameter', 'edited', 'films', 'gravity',\n  'orbital_period', 'population', 'rotation_period', 'surface_water',\n  'terrain', 'url'];\n\nconst filterPlanets = (data, filter) => {\n  const { filterByName: name, filterByNumerics, order } = filter;\n\n  let nameFilter = data.filter((planet) => planet.name.includes(name));\n\n  filterByNumerics.forEach((f) => {\n    const { column, comparison, value } = f;\n    nameFilter = nameFilter.filter((planet) => {\n      switch (comparison) {\n      case 'maior que':\n        return parseInt(planet[column], 10) > value;\n      case 'menor que':\n        return parseInt(planet[column], 10) < value;\n      case 'igual a':\n        return planet[column] === value;\n      default:\n        return '';\n      }\n    });\n  });\n\n  const sortValues = (a, b) => {\n    const { column } = order;\n    const ONE = 1;\n    const item1 = column === 'name' ? a[column] : parseInt(a[column], 10);\n    const item2 = column === 'name' ? b[column] : parseInt(b[column], 10);\n\n    if (item1 < item2) {\n      return -ONE;\n    }\n    if (item1 > item2) {\n      return ONE;\n    }\n    return 0;\n  };\n\n  nameFilter = nameFilter.sort((a, b) => {\n    const { sort } = order;\n    return sort === 'ASC' ? sortValues(a, b) : sortValues(b, a);\n  });\n\n  return nameFilter;\n};\n\nfunction Table() {\n  const { data, filter } = useContext(PlanetsContext);\n  const [planets, setPlanets] = useState([]);\n\n  useEffect(() => {\n    const filteredPlanets = filterPlanets(data, filter);\n    setPlanets(filteredPlanets);\n  }, [data, filter]);\n  \n  const createRow = (planet) => {\n    return headers.map((field, index) => {\n      switch(field) {\n        case 'name':\n          return <td key={ index } data-testid=\"planet-name\">{ planet[field] }</td>;\n        case 'films':\n          return (\n          <td key={ index }>\n            {\n              planet[field].map((film, i) => <div key={ i }><Films film={film}/></div>)\n            }\n          </td>\n          );\n        default:\n          return <td key={ index }>{ planet[field] }</td>;\n      }\n    })\n  }\n  \n  return (\n    <div>\n      <table className=\"table-auto text-xs text-center\">\n        <thead>\n          <tr>\n            {headers.map((field, index) => <th key={ index }>{ field }</th>)}\n          </tr>\n        </thead>\n        <tbody>\n          { planets.map((planet) => (\n            <tr key={ planet.name }>\n              { createRow(planet) }\n            </tr>))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Table;\n","import React, { useState, useContext } from 'react';\nimport PlanetsContext from '../context/PlanetsContext';\n\nconst arrayOptions = ['name', 'population', 'orbital_period', 'diameter',\n  'rotation_period', 'surface_water'];\n\nfunction OrderForm() {\n  const { submitOrder } = useContext(PlanetsContext);\n  const [localOrder, setLocalOrder] = useState({\n    column: '',\n    sort: '',\n  });\n\n  const handleChange = ({ target: { value, name } }) => {\n    setLocalOrder({\n      ...localOrder,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div>\n      <label htmlFor=\"select-options\">\n        Ordenar:\n        <select\n          name=\"column\"\n          id=\"select-options\"\n          onChange={ handleChange }\n          data-testid=\"column-sort\"\n        >\n          { arrayOptions.map((opt, i) => <option key={ i }>{ opt }</option>)}\n        </select>\n      </label>\n      <label htmlFor=\"asc-opt\">\n        Crecente\n        <input\n          type=\"radio\"\n          id=\"asc-opt\"\n          value=\"ASC\"\n          name=\"sort\"\n          onChange={ handleChange }\n          data-testid=\"column-sort-input-asc\"\n        />\n      </label>\n      <label htmlFor=\"desc-opt\">\n        Decrescente\n        <input\n          type=\"radio\"\n          id=\"desc-opt\"\n          value=\"DESC\"\n          name=\"sort\"\n          onChange={ handleChange }\n          data-testid=\"column-sort-input-desc\"\n        />\n      </label>\n      <button\n        data-testid=\"column-sort-button\"\n        type=\"button\"\n        onClick={ () => submitOrder(localOrder) }\n      >\n        Clique aqui!\n      </button>\n    </div>\n  );\n}\n\nexport default OrderForm;\n","import React, { useContext, useEffect, useState } from 'react';\nimport PlanetsContext from '../context/PlanetsContext';\nimport OrderForm from './OrderForm';\n\nconst columnField = ['population', 'orbital_period', 'diameter',\n  'rotation_period', 'surface_water'];\n\nconst comparisonField = ['', 'maior que', 'menor que', 'igual a'];\nconst FIVE = 5;\n\nfunction Filter() {\n  const { handleChange, handleClick, filter, deleteClick } = (\n    useContext(PlanetsContext)\n  );\n  const [localFilter, setLocalFilter] = useState({\n    column: '',\n    comparison: '',\n    value: '',\n  });\n  const [filters, setFilters] = useState(columnField);\n\n  useEffect(() => {\n    const { filterByNumerics } = filter;\n    if (!filterByNumerics) {\n      return setFilters(columnField);\n    }\n    if (filterByNumerics.length > 0) {\n      const arrayOfFilters = filterByNumerics.map((value) => value.column);\n      return setFilters(columnField.filter((v) => !arrayOfFilters.includes(v)));\n    }\n  }, [filter]);\n\n  const updateFilter = ({ target: { name, value } }) => {\n    setLocalFilter({\n      ...localFilter,\n      [name]: value,\n    });\n  };\n\n  const createFilterArea = () => {\n    if (filters.length < FIVE) {\n      return (\n        <div>\n          {\n            filter.filterByNumerics.map(({ column, comparison, value }, index) => (\n              <div key={ index } data-testid=\"filter\">\n                {\n                  `${column} ${comparison} ${value}`\n                }\n                <button\n                  type=\"button\"\n                  onClick={ () => deleteClick(column) }\n                >\n                  X\n                </button>\n              </div>\n            ))\n          }\n        </div>\n      );\n    }\n    return '';\n  };\n\n  return (\n    <form>\n      <label htmlFor=\"input-name\">\n        Nome:\n        <input\n          id=\"input-name\"\n          data-testid=\"name-filter\"\n          onChange={ handleChange }\n        />\n      </label>\n      <label htmlFor=\"column-filter\">\n        Filtro:\n        <select\n          id=\"column-filter\"\n          name=\"column\"\n          data-testid=\"column-filter\"\n          onChange={ updateFilter }\n        >\n          {\n            filters.map((field, i) => <option key={ i }>{ field }</option>)\n          }\n        </select>\n      </label>\n      <label htmlFor=\"comparison-filter\">\n        Comparação:\n        <select\n          id=\"comparison-filter\"\n          name=\"comparison\"\n          data-testid=\"comparison-filter\"\n          onChange={ updateFilter }\n        >\n          {\n            comparisonField.map((field, i) => <option key={ i }>{ field }</option>)\n          }\n        </select>\n      </label>\n      <label htmlFor=\"value-filter\">\n        Valor:\n        <input\n          type=\"number\"\n          name=\"value\"\n          id=\"value-filter\"\n          data-testid=\"value-filter\"\n          onChange={ updateFilter }\n        />\n      </label>\n      <button\n        type=\"button\"\n        data-testid=\"button-filter\"\n        onClick={ () => handleClick(localFilter) }\n      >\n        Adicionar Filtro\n      </button>\n      <OrderForm />\n      <div>\n        {createFilterArea()}\n      </div>\n    </form>\n  );\n}\n\nexport default Filter;\n","import React, { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nfunction Intro() {\n  const [intro, setIntro] = useState(true);\n\n  useEffect(() => {\n    setTimeout(() => setIntro(false), 55500)\n  }, [])\n\n  if (!intro) return <Redirect to=\"/starwars-planets/main\" />;\n\n  return (\n    <div className=\"intro\">\n      <div className=\"fade\"></div>\n      <section className=\"content\">\n        <div className=\"crawl\">\n          <div>\n            <p className=\"sub-title\">\n              Projeto Trybe\n            </p>\n            <h1 className=\"title\">\n              Star Wars Planets Search\n            </h1>\n          </div>\n          <div className=\"text-content\">\n            <p>Há muito tempo atrás, em uma galáxia distante...</p>\n            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Distinctio exercitationem quis corrupti, commodi eius ut, quia reiciendis quisquam accusantium aliquam animi omnis eaque. Aspernatur itaque iure non vero unde harum.</p>\n            <p>Lorem ipsum dolor sit amet consectetur, adipisicing elit. Distinctio optio architecto culpa molestiae officiis. Necessitatibus error doloribus voluptates doloremque iusto quaerat nostrum sed rerum, neque tempora veritatis provident impedit? Excepturi!</p>\n            <p>Que a força esteja com você!</p>\n          </div>\n        </div>\n      </section>\n    </div>\n  )\n}\n\nexport default Intro;\n","import React from 'react';\nimport { Table, Filter } from '../components';\n\nfunction Main() {\n  return (\n    <div className=\"flex flex-col\">\n      <Filter />\n      <Table />\n    </div>\n  )\n}\n\nexport default Main;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router\";\nimport { Intro, Main } from \"../pages\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route exact path=\"/starwars-planets\" component={ Intro }/>\n      <Route path=\"/starwars-planets/main\" component={ Main } />\n    </Switch>\n  )\n}\n\nexport default Router;\n","import React, { useState, useEffect } from \"react\";\n\nfunction Films({ film }) {\n  const [movie, setMovie] = useState('');\n\n  const fetchMovies = async () => {\n    const data = await fetch(film);\n    const json = await data.json();\n    setMovie(json.title);\n  }\n\n  useEffect(() => {\n    fetchMovies();\n  })\n\n  return (\n    <div>\n      { movie }\n    </div>\n  )\n}\n\nexport default Films;\n","import React from 'react';\nimport './App.css';\nimport { Router } from './components';\n\nfunction App() {\n  return (\n    <div>\n      <Router />\n    </div>\n  );\n}\n\nexport default App;\n","import PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport PlanetsContext from './PlanetsContext';\n\nfunction Provider({ children }) {\n  const [data, setData] = useState([]);\n  const [filter, setFilter] = useState({\n    filterByName: '',\n    filterByNumerics: [],\n    order: {\n      column: 'name',\n      sort: 'ASC',\n    },\n  });\n\n  const handleChange = ({ target }) => {\n    setFilter({\n      ...filter,\n      filterByName: target.value,\n    });\n  };\n\n  const handleClick = (state) => {\n    setFilter({\n      ...filter,\n      filterByNumerics: [...filter.filterByNumerics, state],\n    });\n  };\n\n  const deleteClick = (column) => {\n    setFilter({\n      ...filter,\n      filterByNumerics: [\n        ...filter.filterByNumerics.filter((f) => f.column !== column),\n      ],\n    });\n  };\n\n  const submitOrder = (state) => {\n    setFilter({\n      ...filter,\n      order: state,\n    });\n  };\n\n  useEffect(() => {\n    const API = 'https://swapi-trybe.herokuapp.com/api/planets/';\n    async function fetchData() {\n      const request = await fetch(API);\n      const json = await request.json();\n      const results = json.results;\n      setData(results);\n    }\n    fetchData();\n  }, []);\n\n  const context = { data, filter, handleChange, handleClick, deleteClick, submitOrder };\n\n  return (\n    <PlanetsContext.Provider value={ context }>\n      { children }\n    </PlanetsContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Provider;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport Provider from './context/Provider';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <Provider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}