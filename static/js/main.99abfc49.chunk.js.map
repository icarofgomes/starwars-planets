{"version":3,"sources":["context/PlanetsContext.js","components/Table.jsx","components/OrderForm.jsx","components/Filter.jsx","pages/Intro.jsx","pages/Main.jsx","components/Router.jsx","components/Films.jsx","components/Header.jsx","components/SkipButton.jsx","App.js","context/Provider.js","index.js"],"names":["PlanetsContext","createContext","headers","Table","useContext","data","filter","useState","planets","setPlanets","useEffect","filteredPlanets","name","filterByName","filterByNumerics","order","nameFilter","planet","includes","forEach","f","column","comparison","value","parseInt","sortValues","a","b","item1","item2","sort","filterPlanets","createRow","map","field","index","className","film","i","arrayOptions","OrderForm","submitOrder","localOrder","setLocalOrder","handleChange","target","htmlFor","id","onChange","opt","type","onClick","columnField","comparisonField","Filter","handleClick","deleteClick","localFilter","setLocalFilter","filters","setFilters","length","arrayOfFilters","v","updateFilter","placeholder","handleDelete","Intro","setIntro","setTimeout","window","screen","width","Main","Router","exact","path","component","Films","movie","setMovie","fetchMovies","fetch","json","title","Header","SkipButton","class","fill","viewBox","xmlns","d","App","Provider","children","setData","setFilter","API","request","results","fetchData","context","state","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.99abfc49.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst PlanetsContext = createContext();\n\nexport default PlanetsContext;\n","import React, { useContext, useEffect, useState } from 'react';\nimport PlanetsContext from '../context/PlanetsContext';\nimport { Films } from '.'\n\nconst headers = ['name', 'films', 'climate', 'diameter', 'gravity',\n  'orbital_period', 'population', 'rotation_period', 'surface_water',\n  'terrain'];\n\nconst filterPlanets = (data, filter) => {\n  const { filterByName: name, filterByNumerics, order } = filter;\n\n  let nameFilter = data.filter((planet) => planet.name.includes(name));\n\n  filterByNumerics.forEach((f) => {\n    const { column, comparison, value } = f;\n    nameFilter = nameFilter.filter((planet) => {\n      switch (comparison) {\n      case 'maior que':\n        return parseInt(planet[column], 10) > value;\n      case 'menor que':\n        return parseInt(planet[column], 10) < value;\n      case 'igual a':\n        return planet[column] === value;\n      default:\n        return '';\n      }\n    });\n  });\n\n  const sortValues = (a, b) => {\n    const { column } = order;\n    const ONE = 1;\n    const item1 = column === 'name' ? a[column] : parseInt(a[column], 10);\n    const item2 = column === 'name' ? b[column] : parseInt(b[column], 10);\n\n    if (item1 < item2) {\n      return -ONE;\n    }\n    if (item1 > item2) {\n      return ONE;\n    }\n    return 0;\n  };\n\n  nameFilter = nameFilter.sort((a, b) => {\n    const { sort } = order;\n    return sort === 'ASC' ? sortValues(a, b) : sortValues(b, a);\n  });\n\n  return nameFilter;\n};\n\nfunction Table() {\n  const { data, filter } = useContext(PlanetsContext);\n  const [planets, setPlanets] = useState([]);\n\n  useEffect(() => {\n    const filteredPlanets = filterPlanets(data, filter);\n    setPlanets(filteredPlanets);\n  }, [data, filter]);\n  \n  const createRow = (planet) => {\n    return headers.map((field, index) => {\n      switch(field) {\n        case 'name':\n          return (\n            <td\n              className=\"w-1/2 mx-auto font-bold text-xl text-yellow-600 p-2\n                md:text-xs md:my-auto md:p-1 md:w-1/12\"\n              key={ index }\n              data-testid=\"planet-name\"\n            >\n              { planet[field] }\n            </td>\n          );\n        case 'films':\n          return (\n            <td\n              className=\"flex flex-col mx-auto w-1/2 border-1 border-black border-solid shadow-md\n                mb-1 md:shadow-none md:w-1/12 md:table-cell\"\n              key={ index }\n            >\n              <div className=\"font-bold text-yellow-600 text-base md:hidden\">Films</div>\n              <div className=\"md:flex md:flex-col\">\n                {\n                  planet[field].map((film, i) => <div key={ i }><Films film={ film }/></div>)\n                }\n              </div>\n            </td>\n          );\n        default:\n          return (\n            <td\n              className=\"w-2/3 mx-auto flex justify-between md:table-cell md:w-32\"\n              key={ index }\n            >\n              <div className=\"font-bold md:hidden\">{`${field}:`}</div>\n              <div className=\"\">\n                { planet[field] }\n              </div>\n            </td>\n          );\n      }\n    })\n  }\n  \n  return (\n      <table className=\"table-auto text-xs text-center\">\n        <thead className=\"hidden md:table-header-group md:bg-yellow-400 md:h-12\">\n          <tr className=\"justify-around font-bold text-lg\">\n            {headers.map((field, index) => <td key={ index }>{ field }</td>)}\n          </tr>\n        </thead>\n        <tbody className=\"\">\n          { planets.map((planet, i) => (\n            <tr\n              className={`${i % 2 === 0 ? 'bg-gray-200' : 'bg-yellow-100'} flex flex-col\n                md:table-row`}\n              key={ planet.name }\n            >\n              { createRow(planet) }\n            </tr>))}\n        </tbody>\n      </table>\n  );\n}\n\nexport default Table;\n","import React, { useState, useContext } from 'react';\nimport PlanetsContext from '../context/PlanetsContext';\n\nconst arrayOptions = ['name', 'population', 'orbital_period', 'diameter',\n  'rotation_period', 'surface_water'];\n\nfunction OrderForm() {\n  const { submitOrder } = useContext(PlanetsContext);\n  const [localOrder, setLocalOrder] = useState({\n    column: 'name',\n    sort: '',\n  });\n\n  const handleChange = ({ target: { value, name } }) => {\n    setLocalOrder({\n      ...localOrder,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"p-2 flex flex-col\">\n      <div className=\"flex justify-between p-1\">\n        <div>Categoria</div>\n        <label htmlFor=\"select-options\">\n          <select\n            className=\"text-black\"\n            name=\"column\"\n            id=\"select-options\"\n            onChange={ handleChange }\n            data-testid=\"column-sort\"\n          >\n            { arrayOptions.map((opt, i) => <option key={ i }>{ opt }</option>)}\n          </select>\n        </label>\n      </div>\n      <div className=\"flex justify-around\">\n        <label\n        className=\"text-lg\"\n          htmlFor=\"asc-opt\">\n          <input\n            className=\"appearance-none mx-2 w-4 h-4 border border-gray-300 rounded-sm outline-none cursor-pointer checked:bg-yellow-200\"\n            type=\"radio\"\n            id=\"asc-opt\"\n            value=\"ASC\"\n            name=\"sort\"\n            onChange={ handleChange }\n            data-testid=\"column-sort-input-asc\"\n          />\n          Crescente\n        </label>\n        <label\n          className=\"text-lg\"\n          htmlFor=\"desc-opt\">\n          <input\n            className=\"appearance-none w-4 h-4 mx-2 border border-gray-300 rounded-sm outline-none cursor-pointer checked:bg-yellow-200\"\n            type=\"radio\"\n            id=\"desc-opt\"\n            value=\"DESC\"\n            name=\"sort\"\n            onChange={ handleChange }\n            data-testid=\"column-sort-input-desc\"\n          />\n          Descrescente\n        </label>\n      </div>\n      <button\n        className=\"p-1 bg-yellow-400 text-black font-medium rounded-sm hover:bg-yellow-100\"\n        data-testid=\"column-sort-button\"\n        type=\"button\"\n        onClick={ () => submitOrder(localOrder) }\n      >\n        Ordenar\n      </button>\n    </div>\n  );\n}\n\nexport default OrderForm;\n","import React, { useContext, useEffect, useState } from 'react';\nimport PlanetsContext from '../context/PlanetsContext';\nimport OrderForm from './OrderForm';\n\nconst columnField = ['population', 'orbital_period', 'diameter',\n  'rotation_period', 'surface_water'];\n\nconst comparisonField = ['maior que', 'menor que', 'igual a'];\nconst FIVE = 5;\n\nfunction Filter() {\n  const { handleChange, handleClick, filter, deleteClick } = (\n    useContext(PlanetsContext)\n  );\n  const [localFilter, setLocalFilter] = useState({\n    column: 'population',\n    comparison: 'maior que',\n    value: '',\n  });\n  const [filters, setFilters] = useState(columnField);\n\n  useEffect(() => {\n    const { filterByNumerics } = filter;\n    if (!filterByNumerics) {\n      return setFilters(columnField);\n    }\n    if (filterByNumerics.length > 0) {\n      const arrayOfFilters = filterByNumerics.map((value) => value.column);\n      return setFilters(columnField.filter((v) => !arrayOfFilters.includes(v)));\n    }\n  }, [filter]);\n\n  useEffect(() => {\n    setLocalFilter({\n      column: filters[0],\n      comparison: 'maior que',\n      value: '',\n    })\n  },[filters]);\n\n  const updateFilter = ({ target: { name, value } }) => {\n    setLocalFilter({\n      ...localFilter,\n      [name]: value,\n    });\n  };\n\n  const handleDelete = (column) => {\n    setFilters([...filters, column]);\n    deleteClick(column);\n  }\n\n  const createFilterArea = () => {\n    if (filters.length < FIVE) {\n      return (\n        <div className=\"p-1\">\n          <hr/>\n          <div>\n            Filtros:\n          </div>\n          <div className=\"flex\">\n            {\n              filter.filterByNumerics.map(({ column, comparison, value }, index) => (\n                <div\n                  className=\"flex items-center\"\n                  key={ index }\n                  data-testid=\"filter\"\n                >\n                  {\n                    `${column} ${comparison} ${value}`\n                  }\n                  <button\n                    className=\"mx-2 bg-yellow-400 text-black h-5 w-5 flex items-center\n                      justify-center font-bold rounded\"\n                    type=\"button\"\n                    onClick={ () => handleDelete(column) }\n                  >\n                    X\n                  </button>\n                </div>\n              ))\n            }\n          </div>\n        </div>\n      );\n    }\n    return '';\n  };\n\n  return (\n    <form>\n      <div className=\"flex justify-center p-2\">\n        <label htmlFor=\"input-name\">\n          <input\n            className=\"rounded-sm text-black\"\n            id=\"input-name\"\n            data-testid=\"name-filter\"\n            onChange={ handleChange }\n            placeholder=\"Nome\"\n          />\n        </label>\n      </div>\n      <hr />\n      <div className=\"p-2 flex flex-col\">\n        <div className=\"flex justify-between p-1\">\n          <div>Categoria</div>\n          <div className=\"w-32\">\n            <label htmlFor=\"column-filter\">\n              <select\n                className=\"text-black w-full bg-gray-200 rounded-sm\"\n                id=\"column-filter\"\n                name=\"column\"\n                data-testid=\"column-filter\"\n                value={ localFilter.column }\n                onChange={ updateFilter }\n              >\n                {\n                  filters.map((field, i) => <option key={ i }>{ field }</option>)\n                }\n              </select>\n            </label>\n          </div>\n        </div>\n        <div className=\"flex justify-between p-1\">\n          <div>Comparação</div>\n          <div className=\"w-32\">\n            <label htmlFor=\"comparison-filter\">\n              <select\n                className=\"text-black w-full bg-gray-200 rounded-sm\"\n                id=\"comparison-filter\"\n                name=\"comparison\"\n                data-testid=\"comparison-filter\"\n                value={ localFilter.comparison }\n                onChange={ updateFilter }\n              >\n                {\n                  comparisonField.map((field, i) => <option key={ i }>{ field }</option>)\n                }\n              </select>\n            </label>\n          </div>\n        </div>\n        <div className=\"flex justify-between p-1\">\n          <div>Valor</div>\n          <div className=\"w-32\">\n            <label\n              className=\"flex justify-end text-black\"\n              htmlFor=\"value-filter\">\n              <input\n                className=\"w-full h-5 bg-gray-200 rounded-sm\"\n                type=\"number\"\n                name=\"value\"\n                id=\"value-filter\"\n                data-testid=\"value-filter\"\n                value={ localFilter.value }\n                onChange={ updateFilter }\n              />\n            </label>\n          </div>\n        </div>\n        <button\n          className=\"p-1 bg-yellow-400 text-black font-medium rounded-sm hover:bg-yellow-100\"\n          type=\"button\"\n          data-testid=\"button-filter\"\n          onClick={ () => handleClick(localFilter) }\n        >\n          Adicionar Filtro\n        </button>\n      </div>\n      <hr />\n      <OrderForm />\n      <div>\n        {createFilterArea()}\n      </div>\n    </form>\n  );\n}\n\nexport default Filter;\n","import React, { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { SkipButton } from '../components';\n\nfunction Intro() {\n  const [intro, setIntro] = useState(true);\n\n  useEffect(() => {\n    setTimeout(() => setIntro(false), window.screen.width > 680 ? 50000 : 60000)\n  }, [])\n\n  const handleClick = () => {\n    setIntro(false);\n  }\n\n  // if (!intro) return <Redirect to=\"/starwars-planets/main\" />;\n\n  return (\n    <div className=\"intro\">\n      <SkipButton handleClick={ handleClick }/>\n      <div className=\"fade\"></div>\n      <section className=\"content\">\n        <div className=\"crawl\">\n          <div>\n            <p className=\"sub-title\">\n              Projeto Trybe\n            </p>\n            <h1 className=\"title\">\n              Star Wars Planets Search\n            </h1>\n          </div>\n          <div className=\"text-content\">\n            <p>Há muito tempo atrás, em uma galáxia distante...</p>\n            <p>Nesta aplicação é possível consultar informações sobre alguns planetas do universo de Star Wars, também é possível fazer buscas, aplicar filtros e reordenar a lista.</p>\n            <p>Este projeto foi realizado utilizando React e tem como objetivo por em prática os recursos de hooks, componentes funcionais e a context API do React para gerenciamento do estado global.</p>\n            <p>Este projeto foi realizado dentro do curso de Desenvolvimento Web da Trybe, e para isso foi consumida a SWAPI oferecida no próprio repositório do projeto. Dessa forma foi possível exercitar também requisições assíncronas.</p>\n            <p>Que a força esteja com você!</p>\n          </div>\n        </div>\n      </section>\n    </div>\n  )\n}\n\nexport default Intro;\n","import React from 'react';\nimport { Table, Header } from '../components';\n\nfunction Main() {\n  return (\n    <div className=\"flex flex-col\">\n      <Header />\n      <Table />\n    </div>\n  )\n}\n\nexport default Main;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router\";\nimport { Intro, Main } from \"../pages\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route exact path=\"/starwars-planets\" component={ Intro }/>\n      <Route path=\"/starwars-planets/main\" component={ Main } />\n    </Switch>\n  )\n}\n\nexport default Router;\n","import React, { useState, useEffect } from \"react\";\n\nfunction Films({ film }) {\n  const [movie, setMovie] = useState('');\n\n  const fetchMovies = async () => {\n    const data = await fetch(film);\n    const json = await data.json();\n    setMovie(json.title);\n  }\n\n  useEffect(() => {\n    fetchMovies();\n  })\n\n  return (\n    <div>\n      { movie }\n    </div>\n  )\n}\n\nexport default Films;\n","import React from 'react';\nimport { Filter } from '.';\n\nfunction Header() {\n  return(\n    <div className=\"bg-black text-yellow-300 font-medium\">\n      <h1 className=\"text-center text-xl p-2\">Star Wars Planets Search</h1>\n      <Filter />\n    </div>\n  )\n}\n\nexport default Header;\n","import React from 'react';\n\nfunction SkipButton ({ handleClick }) {\n  return(\n    <button\n      onClick={ handleClick}\n      type=\"button\"\n      className=\"border-4 border-yellow-300 rounded-full p-1 fixed top-8 right-6\n        z-10 md:top-auto md:bottom-8 hover:border-white\"\n    >\n      <svg class=\"w-10 h-10 transition-all duration-200 md:w-14 md:h-14\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\" clip-rule=\"evenodd\"></path></svg>\n    </button>\n  )\n}\n\nexport default SkipButton;\n","import React from 'react';\nimport './App.css';\nimport { Router } from './components';\n\nfunction App() {\n  return (\n    <div>\n      <Router />\n    </div>\n  );\n}\n\nexport default App;\n","import PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport PlanetsContext from './PlanetsContext';\n\nfunction Provider({ children }) {\n  const [data, setData] = useState([]);\n  const [filter, setFilter] = useState({\n    filterByName: '',\n    filterByNumerics: [],\n    order: {\n      column: 'name',\n      sort: 'ASC',\n    },\n  });\n\n  const handleChange = ({ target }) => {\n    setFilter({\n      ...filter,\n      filterByName: target.value,\n    });\n  };\n\n  const handleClick = (state) => {\n    setFilter({\n      ...filter,\n      filterByNumerics: [...filter.filterByNumerics, state],\n    });\n  };\n\n  const deleteClick = (column) => {\n    setFilter({\n      ...filter,\n      filterByNumerics: [\n        ...filter.filterByNumerics.filter((f) => f.column !== column),\n      ],\n    });\n  };\n\n  const submitOrder = (state) => {\n    setFilter({\n      ...filter,\n      order: state,\n    });\n  };\n\n  useEffect(() => {\n    const API = 'https://swapi-trybe.herokuapp.com/api/planets/';\n    async function fetchData() {\n      const request = await fetch(API);\n      const json = await request.json();\n      const results = json.results;\n      setData(results);\n    }\n    fetchData();\n  }, []);\n\n  const context = { data, filter, handleChange, handleClick, deleteClick, submitOrder };\n\n  return (\n    <PlanetsContext.Provider value={ context }>\n      { children }\n    </PlanetsContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Provider;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport Provider from './context/Provider';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <Provider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}